# loading libraries  ---------------------------------------------
library(tidyverse)
# use a tidyverse function to read in the included IAT_2019.csv file
tbl <- read_csv(IAT.csv)
getwd()
tbl <- read_csv("IAT.csv")
tbl_clean <- select(tbl,session_id,genderidentity,raceomb_002,D_biep.White_Good_all,Mn_RT_all_3467,edu_14,politicalid_7,STATE,att_7,tblacks_0to10,twhites_0to10,labels)
view(tbl)
tbl_clean <- select(tbl,session_id,gender,raceomb_002,D_biep.White_Good_all,Mn_RT_all_3467,edu_14,politicalid_7,STATE,att_7,tblacks_0to10,twhites_0to10,labels)
view(tbl_clean)
View(tbl_clean)
# next, clean up the rows
# our primary dependent variable is D_biep.White_Good_all, but some subjects
# don't have any data. Remove the rows with missing D_biep.White_Good_all entries
tbl_clean <- drop_na(tbl_clean,D_biep.White_Good_all)
View(tbl_clean)
tbl_clean <- rename(tbl_clean, id=session_id, race=raceomb_022, bias=D_biep.White_Good_all,rt=Mn_RT_all_3467, edu=edu_14, pol=politicalid_7,state=STATE,att=att_7,temp_b=tblacks_0to10,temp_w=twhites_0to10)
tbl_clean <- rename(tbl_clean, id=session_id, race=raceomb_002, bias=D_biep.White_Good_all,rt=Mn_RT_all_3467, edu=edu_14, pol=politicalid_7,state=STATE,att=att_7,temp_b=tblacks_0to10,temp_w=twhites_0to10)
summary(tbl_clean)
summary(tbl_clean)
tbl_clean$gender <- na_if(tbl_clean$gender," ")
summary(tbl_clean)
summary(tbl_clean)
tbl_clean$gender <- na_if(tbl_clean$gender,"")
summary(tbl_clean)
tbl_clean$gender <- is_na(tbl_clean$gender,"")
summary(tbl_clean)
tbl_clean$gender <- replace(tbl_clean$gender, tbl_clean$gender==0, NA)
summary(tbl_clean)
#  missing values  ---------------------------------------------
tbl_clean[2,8]
#  missing values  ---------------------------------------------
tbl_clean[8,2]
summary(tbl_clean)
#  missing values  ---------------------------------------------
tbl_clean[4,8]
tbl_clean$gender <- na_if(tbl_clean$gender, "NA")
summary(tbl_clean)
tbl_clean$gender <- na_if(tbl_clean$gender,"")
tbl_clean$gender <- na_if(tbl_clean$gender,"")
summary(tbl_clean)
is.na(tbl_clean$gender)
is.na(tbl_clean$state)
tbl_clean$gender <- na_if(tbl_clean$gender,NA)
summary(tbl_clean)
tbl_clean$gender <- replace_na(tbl_clean$gender,"NA")
tbl_clean$gender <- na_if(tbl_clean$gender,"NA")
summary(tbl_clean)
is.na(tbl_clean$gender)
summary(tbl_clean$gender)
summary(tbl_clean)
tbl_clean$gender <- replace_na(tbl_clean$gender,"0")
View(tbl_clean)
tbl_clean$gender <- na_if(tbl_clean$gender,"0")
View(tbl_clean)
summary(tbl_clean)
summary(tbl_clean)
tbl <- read_csv("IAT.csv")
tbl_clean <- select(tbl,session_id,gender,raceomb_002,D_biep.White_Good_all,Mn_RT_all_3467,edu_14,politicalid_7,STATE,att_7,tblacks_0to10,twhites_0to10,labels)
# next, clean up the rows
# our primary dependent variable is D_biep.White_Good_all, but some subjects
# don't have any data. Remove the rows with missing D_biep.White_Good_all entries
tbl_clean <- drop_na(tbl_clean,D_biep.White_Good_all)
tbl_clean <- rename(tbl_clean, id=session_id, race=raceomb_002, bias=D_biep.White_Good_all,rt=Mn_RT_all_3467, edu=edu_14, pol=politicalid_7,state=STATE,att=att_7,temp_b=tblacks_0to10,temp_w=twhites_0to10)
is.na(tbl_clean$gender)
sum(is.na(tbl_clean$gender))
summary(tbl_clean)
summary(tbl_clean)
class(id)
class(tbl_clean$id)
str(tbl_clean)
str(tbl_clean)
#this output indicates that only gender and state are character types
#all other variables are numeric
tbl_clean <- mutate_if(tbl_clean, is.character, as.factor)
str(tbl_clean)
summary(tbl_clean)
# recoding variables  ---------------------------------------------
# participants were instructed to select all the gender idenities that apply to them
# this results in a lot of combinations!
# this pipeline tabulates the number of participants who endorse different gender identities.
gender_count <- tbl_clean %>% group_by(gender) %>% tally()
tbl <- read_csv("IAT.csv")
tbl_clean <- select(tbl,session_id,gender,raceomb_002,D_biep.White_Good_all,Mn_RT_all_3467,edu_14,politicalid_7,STATE,att_7,tblacks_0to10,twhites_0to10,labels)
# next, clean up the rows
# our primary dependent variable is D_biep.White_Good_all, but some subjects
# don't have any data. Remove the rows with missing D_biep.White_Good_all entries
tbl_clean <- drop_na(tbl_clean,D_biep.White_Good_all)
tbl_clean <- rename(tbl_clean, id=session_id, race=raceomb_002, bias=D_biep.White_Good_all,rt=Mn_RT_all_3467, edu=edu_14, pol=politicalid_7,state=STATE,att=att_7,temp_b=tblacks_0to10,temp_w=twhites_0to10)
#this output indicates that only gender and state are character types
#all other variables are numeric
tbl_clean <- mutate_if(tbl_clean, is.character, as.factor)
str(tbl_clean)
summary(tbl_clean)
# Now take a look at how highest obtained education is coded (key on line 35)
edu_count <- tbl_clean %>% group_by(edu_14) %>% tally()
# recoding variables  ---------------------------------------------
# participants were instructed to select all the gender idenities that apply to them
# this results in a lot of combinations!
# this pipeline tabulates the number of participants who endorse different gender identities.
gender_count <- tbl_clean %>% group_by(gender) %>% tally()
tbl_clean$gender <- replace_na(tbl_clean$gender,0)
tbl_clean$gender <- replace_na(tbl_clean$gender,'0')
View(tbl_clean)
tbl_clean$gender[tbl_clean$gender] <- 0
tbl <- read_csv("IAT.csv")
tbl_clean <- select(tbl,session_id,gender,raceomb_002,D_biep.White_Good_all,Mn_RT_all_3467,edu_14,politicalid_7,STATE,att_7,tblacks_0to10,twhites_0to10,labels)
# next, clean up the rows
# our primary dependent variable is D_biep.White_Good_all, but some subjects
# don't have any data. Remove the rows with missing D_biep.White_Good_all entries
tbl_clean <- drop_na(tbl_clean,D_biep.White_Good_all)
tbl_clean <- rename(tbl_clean, id=session_id, race=raceomb_002, bias=D_biep.White_Good_all,rt=Mn_RT_all_3467, edu=edu_14, pol=politicalid_7,state=STATE,att=att_7,temp_b=tblacks_0to10,temp_w=twhites_0to10)
summary(tbl_clean)
tbl_clean$gender <- replace_na(tbl_clean$gender,'0')
#this output indicates that only gender and state are character types
#all other variables are numeric
tbl_clean <- mutate_if(tbl_clean, is.character, as.factor)
# recoding variables  ---------------------------------------------
# participants were instructed to select all the gender idenities that apply to them
# this results in a lot of combinations!
# this pipeline tabulates the number of participants who endorse different gender identities.
gender_count <- tbl_clean %>% group_by(gender) %>% tally()
View(gender_count)
summary(tbl_clean)
tbl <- read_csv("IAT.csv")
tbl_clean <- select(tbl,session_id,gender,raceomb_002,D_biep.White_Good_all,Mn_RT_all_3467,edu_14,politicalid_7,STATE,att_7,tblacks_0to10,twhites_0to10,labels)
# next, clean up the rows
# our primary dependent variable is D_biep.White_Good_all, but some subjects
# don't have any data. Remove the rows with missing D_biep.White_Good_all entries
tbl_clean <- drop_na(tbl_clean,D_biep.White_Good_all)
tbl_clean <- rename(tbl_clean, id=session_id, race=raceomb_002, bias=D_biep.White_Good_all,rt=Mn_RT_all_3467, edu=edu_14, pol=politicalid_7,state=STATE,att=att_7,temp_b=tblacks_0to10,temp_w=twhites_0to10)
summary(tbl_clean)
tbl_clean$gender <- replace_na(tbl_clean$gender,'0')
tbl_clean$state <- replace_na(tbl_clean$state,'0')
summary(tbl_clean)
# sort the output and then use indexing to print the 3 most common response (not inlcuding missing values)
gender_count <- arrange(gender_count,n)
# sort the output and then use indexing to print the 3 most common response (not inlcuding missing values)
gender_count <- arrange(gender_count,-n)
gender_count[,1:3]
gender_count[1:3]
gender_count[1,1:3]
gender_count[1:3,1]
tbl_clean$gender <- na_if(tbl_clean$gender,'0')
tbl_clean$state <- na_if(tbl_clean$state,'0')
summary(tbl_clean)
# recoding variables  ---------------------------------------------
# participants were instructed to select all the gender idenities that apply to them
# this results in a lot of combinations!
# this pipeline tabulates the number of participants who endorse different gender identities.
gender_count <- tbl_clean %>% group_by(gender) %>% tally()
# recoding variables  ---------------------------------------------
# participants were instructed to select all the gender idenities that apply to them
# this results in a lot of combinations!
# this pipeline tabulates the number of participants who endorse different gender identities.
gender_count <- tbl_clean %>% group_by(gender) %>% tally()
# sort the output and then use indexing to print the 3 most common response (not inlcuding missing values)
gender_count <- arrange(gender_count,-n)
gender_count[1:4,1]
# create a new variable that recodes gender to have 4 levels: the 3 most common responses and the others collapsed together
# you can use the key provided on line 31 to understand the levels
# check out recode documentation to see if there's a trick for setting defaults values for unspecified rows
# *note that this excercise in data recoding doesn't reflect the instructors' views on gender identities...
tbl_clean$gender4 <- recode(tbl_clean$gender, [2]='female',[1]='male',[5]='genderqueer/gender nonconforming', .default='other')
gender_count[1:4,1]
str(gender_count[1,1])
# create a new variable that recodes gender to have 4 levels: the 3 most common responses and the others collapsed together
# you can use the key provided on line 31 to understand the levels
# check out recode documentation to see if there's a trick for setting defaults values for unspecified rows
# *note that this excercise in data recoding doesn't reflect the instructors' views on gender identities...
tbl_clean$gender4 <- recode(tbl_clean$gender, '2'='female','2'='male','2'='genderqueer/gender nonconforming', .default='other')
view(tbl_clean$gender4)
# create a new variable that recodes gender to have 4 levels: the 3 most common responses and the others collapsed together
# you can use the key provided on line 31 to understand the levels
# check out recode documentation to see if there's a trick for setting defaults values for unspecified rows
# *note that this excercise in data recoding doesn't reflect the instructors' views on gender identities...
tbl_clean$gender4 <- recode(tbl_clean$gender, 2='female','2'='male','2'='genderqueer/gender nonconforming', .default='other')
#this output indicates that only gender and state are character types
#all other variables are numeric
tbl_clean <- mutate_if(tbl_clean, is.character, as.factor)
# recoding variables  ---------------------------------------------
# participants were instructed to select all the gender idenities that apply to them
# this results in a lot of combinations!
# this pipeline tabulates the number of participants who endorse different gender identities.
gender_count <- tbl_clean %>% group_by(gender) %>% tally()
tbl_clean$gender <- fct_explicit_na(tbl_clean$gender, na_level = "(Missing)")
tbl_clean$state <- fct_explicit_na(tbl_clean$state, na_level = "(Missing)")
# recoding variables  ---------------------------------------------
# participants were instructed to select all the gender idenities that apply to them
# this results in a lot of combinations!
# this pipeline tabulates the number of participants who endorse different gender identities.
gender_count <- tbl_clean %>% group_by(gender) %>% tally()
# sort the output and then use indexing to print the 3 most common response (not inlcuding missing values)
gender_count <- arrange(gender_count,-n)
gender_count[1:4,1]
# create a new variable that recodes gender to have 4 levels: the 3 most common responses and the others collapsed together
# you can use the key provided on line 31 to understand the levels
# check out recode documentation to see if there's a trick for setting defaults values for unspecified rows
# *note that this excercise in data recoding doesn't reflect the instructors' views on gender identities...
tbl_clean$gender4 <- recode(tbl_clean$gender, 2='female','2'='male','2'='genderqueer/gender nonconforming', .default='other')
# create a new variable that recodes gender to have 4 levels: the 3 most common responses and the others collapsed together
# you can use the key provided on line 31 to understand the levels
# check out recode documentation to see if there's a trick for setting defaults values for unspecified rows
# *note that this excercise in data recoding doesn't reflect the instructors' views on gender identities...
tbl_clean$gender4 <- recode(tbl_clean$gender, 2 = 'female','1' = 'male', 5 ='genderqueer/gender nonconforming', .default='other')
# create a new variable that recodes gender to have 4 levels: the 3 most common responses and the others collapsed together
# you can use the key provided on line 31 to understand the levels
# check out recode documentation to see if there's a trick for setting defaults values for unspecified rows
# *note that this excercise in data recoding doesn't reflect the instructors' views on gender identities...
tbl_clean$gender4 <- recode(tbl_clean$gender, '[2]' = 'female','[1]' = 'male', ['5'] ='genderqueer/gender nonconforming', .default='other')
# create a new variable that recodes gender to have 4 levels: the 3 most common responses and the others collapsed together
# you can use the key provided on line 31 to understand the levels
# check out recode documentation to see if there's a trick for setting defaults values for unspecified rows
# *note that this excercise in data recoding doesn't reflect the instructors' views on gender identities...
tbl_clean$gender4 <- recode(tbl_clean$gender, '[2]' = 'female','[1]' = 'male', '[5]' ='genderqueer/gender nonconforming', .default='other')
# Now take a look at how highest obtained education is coded (key on line 35)
edu_count <- tbl_clean %>% group_by(edu_14) %>% tally()
# Now take a look at how highest obtained education is coded (key on line 35)
edu_count <- tbl_clean %>% group_by(edu) %>% tally()
View(edu_count)
tbl_clean$state <- fct_explicit_na(tbl_clean$state, na_level = "(Missing)")
# Now take a look at how highest obtained education is coded (key on line 35)
edu_count <- tbl_clean %>% group_by(edu) %>% tally()
View(edu_count)
#create a new variable that recodes education into: no highscool, some highschool, highschool graduate, some college, postsecondary degree, masters (MA & MBA), advanced degree
#remember that the recode function isn't always the best solution for numeric variables
tbl_clean$edu <- recode((tbl_clean$edu, 14=9.5))
#create a new variable that recodes education into: no highscool, some highschool, highschool graduate, some college, postsecondary degree, masters (MA & MBA), advanced degree
#remember that the recode function isn't always the best solution for numeric variables
tbl_clean$edu <- recode(tbl_clean$edu, 14=9.5)
#create a new variable that recodes education into: no highscool, some highschool, highschool graduate, some college, postsecondary degree, masters (MA & MBA), advanced degree
#remember that the recode function isn't always the best solution for numeric variables
tbl_clean$edu <- recode(tbl_clean$edu, 14 = 9.5)
#create a new variable that recodes education into: no highscool, some highschool, highschool graduate, some college, postsecondary degree, masters (MA & MBA), advanced degree
#remember that the recode function isn't always the best solution for numeric variables
tbl_clean$edu <- recode(tbl_clean$edu, "14" = 9.5)
# Now take a look at how highest obtained education is coded (key on line 35)
edu_count <- tbl_clean %>% group_by(edu) %>% tally()
tbl_clean$edu7 <- cut(tbl_clean$edu,breaks=c(0,2,3,4,5,8,9.5))
tbl_clean$edu7 <- cut(tbl_clean$edu,breaks=c(0,2,3,4,5,8,9.5), labels=c('no high school','some high school','high school graduate','some college','postsecondary degree','masters','advanced degree'))
tbl_clean$edu7 <- cut(tbl_clean$edu,breaks=c(0,2,3,4,5,8,9.5,13), labels=c('no high school','some high school','high school graduate','some college','postsecondary degree','masters','advanced degree'))
# mutating variables ---------------------------------------------
# rewrite the above recoding steps so that they both occur within a single call of the mutate function
tbl_clean <- mutate(tbl_clean, gender4=recode(tbl_clean$gender, '[2]' = 'female','[1]' = 'male', '[5]' ='genderqueer/gender nonconforming', .default='other'), edu7=cut(tbl_clean$edu,breaks=c(0,2,3,4,5,8,9.5,13), labels=c('no high school','some high school','high school graduate','some college','postsecondary degree','masters','advanced degree')))
tbl <- read_csv("IAT.csv")
tbl_clean <- select(tbl,session_id,gender,raceomb_002,D_biep.White_Good_all,Mn_RT_all_3467,edu_14,politicalid_7,STATE,att_7,tblacks_0to10,twhites_0to10,labels)
# next, clean up the rows
# our primary dependent variable is D_biep.White_Good_all, but some subjects
# don't have any data. Remove the rows with missing D_biep.White_Good_all entries
tbl_clean <- drop_na(tbl_clean,D_biep.White_Good_all)
tbl_clean <- rename(tbl_clean, id=session_id, race=raceomb_002, bias=D_biep.White_Good_all,rt=Mn_RT_all_3467, edu=edu_14, pol=politicalid_7,state=STATE,att=att_7,temp_b=tblacks_0to10,temp_w=twhites_0to10)
summary(tbl_clean)
tbl_clean$gender <- fct_explicit_na(tbl_clean$gender, na_level = "(Missing)")
tbl_clean$state <- fct_explicit_na(tbl_clean$state, na_level = "(Missing)")
summary(tbl_clean)
tbl <- read_csv("IAT.csv")
tbl_clean <- select(tbl,session_id,gender,raceomb_002,D_biep.White_Good_all,Mn_RT_all_3467,edu_14,politicalid_7,STATE,att_7,tblacks_0to10,twhites_0to10,labels)
# next, clean up the rows
# our primary dependent variable is D_biep.White_Good_all, but some subjects
# don't have any data. Remove the rows with missing D_biep.White_Good_all entries
tbl_clean <- drop_na(tbl_clean,D_biep.White_Good_all)
tbl_clean <- rename(tbl_clean, id=session_id, race=raceomb_002, bias=D_biep.White_Good_all,rt=Mn_RT_all_3467, edu=edu_14, pol=politicalid_7,state=STATE,att=att_7,temp_b=tblacks_0to10,temp_w=twhites_0to10)
summary(tbl_clean)
tbl_clean$gender <- fct_explicit_na(tbl_clean$gender, na_level = "(Missing)")
tbl_clean$state <- fct_explicit_na(tbl_clean$state, na_level = "(Missing)")
summary(tbl_clean)
str(tbl_clean)
# recoding variables  ---------------------------------------------
# participants were instructed to select all the gender idenities that apply to them
# this results in a lot of combinations!
# this pipeline tabulates the number of participants who endorse different gender identities.
gender_count <- tbl_clean %>% group_by(gender) %>% tally()
# sort the output and then use indexing to print the 3 most common response (not inlcuding missing values)
gender_count <- arrange(gender_count,-n)
gender_count[1:4,1]
# create a new variable that recodes gender to have 4 levels: the 3 most common responses and the others collapsed together
# you can use the key provided on line 31 to understand the levels
# check out recode documentation to see if there's a trick for setting defaults values for unspecified rows
# *note that this excercise in data recoding doesn't reflect the instructors' views on gender identities...
tbl_clean$gender4 <- recode(tbl_clean$gender, '[2]' = 'female','[1]' = 'male', '[5]' ='genderqueer/gender nonconforming', .default='other')
# Now take a look at how highest obtained education is coded (key on line 35)
edu_count <- tbl_clean %>% group_by(edu) %>% tally()
tbl_clean$edu <- recode(tbl_clean$edu, "14" = 9.5) #MBA now numerically adjacent to MA for binning purposes
# loading libraries  ---------------------------------------------
library(tidyverse)
tbl <- read_csv("IAT.csv")
tbl_clean <- select(tbl,session_id,gender,raceomb_002,D_biep.White_Good_all,Mn_RT_all_3467,edu_14,politicalid_7,STATE,att_7,tblacks_0to10,twhites_0to10,labels)
# next, clean up the rows
# our primary dependent variable is D_biep.White_Good_all, but some subjects
# don't have any data. Remove the rows with missing D_biep.White_Good_all entries
tbl_clean <- drop_na(tbl_clean,D_biep.White_Good_all)
tbl_clean <- rename(tbl_clean, id=session_id, race=raceomb_002, bias=D_biep.White_Good_all,rt=Mn_RT_all_3467, edu=edu_14, pol=politicalid_7,state=STATE,att=att_7,temp_b=tblacks_0to10,temp_w=twhites_0to10)
summary(tbl_clean)
tbl_clean$gender <- fct_explicit_na(tbl_clean$gender, na_level = "(Missing)")
tbl_clean$state <- fct_explicit_na(tbl_clean$state, na_level = "(Missing)")
#i originally used the na_if function for this step, but the na values created problems with the gender and education count pipelines
#the error message recommended this function, which i looked up and used here
str(tbl_clean)
#this output indicates that only gender and state are character types
#all other variables are numeric
tbl_clean <- mutate_if(tbl_clean, is.character, as.factor)
# recoding variables  ---------------------------------------------
# participants were instructed to select all the gender idenities that apply to them
# this results in a lot of combinations!
# this pipeline tabulates the number of participants who endorse different gender identities.
gender_count <- tbl_clean %>% group_by(gender) %>% tally()
# sort the output and then use indexing to print the 3 most common response (not inlcuding missing values)
gender_count <- arrange(gender_count,-n)
# mutating variables ---------------------------------------------
# rewrite the above recoding steps so that they both occur within a single call of the mutate function
tbl_clean <- mutate(tbl_clean, gender4=recode(tbl_clean$gender, '[2]' = 'female','[1]' = 'male', '[5]' ='genderqueer/gender nonconforming', .default='other'), edu7=cut(tbl_clean$edu,breaks=c(0,2,3,4,5,8,9.5,13), labels=c('no high school','some high school','high school graduate','some college','postsecondary degree','masters','advanced degree')))
# white men
print(mean(filter(tbl_clean,race==6 & gender==1)))
# white men
white_men <- filter(tbl_clean,race==6 & gender==1)
print(mean(white_men$bias))
View(white_men)
# white men
white_men <- filter(tbl_clean,race==6 & gender==1)
# mutating variables ---------------------------------------------
# rewrite the above recoding steps so that they both occur within a single call of the mutate function
tbl_clean <- mutate(tbl_clean, gender4=recode(tbl_clean$gender, '[2]' = 'female','[1]' = 'male', '[5]' ='genderqueer/gender nonconforming', .default='other'), edu7=cut(tbl_clean$edu,breaks=c(0,2,3,4,5,8,9.5,13), labels=c('no high school','some high school','high school graduate','some college','postsecondary degree','masters','advanced degree')))
# white men
white_men <- filter(tbl_clean,race=='6' & gender=='1')
# white men
white_men <- filter(tbl_clean,race=='6' & gender=='1')
# white men
white_men <- filter(tbl_clean,race==6 & gender4=='male')
print(mean(white_men$bias))
print(mean(white_women$bias))
# white women
white_women <- filter(tbl_clean,race==6 & gender4=='female')
print(mean(white_women$bias))
# advanced degree holders who are men
adv_men <- filter(tbl_clean,edu7=='advanced degree' & gender4=='male')
print(mean(adv_men$bias))
# high school graduates who are men
hs_men <- filter(tbl_clean,edu7=='high school graduate' & gender4=='male')
print(mean(hs_men$bias)
print(mean(hs_men$bias))
print(mean(hs_men$bias))
